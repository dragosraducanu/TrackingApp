plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id "com.google.protobuf" version "0.8.17"

}

android {
    namespace 'com.dragos.challenge'
    compileSdk 32

    defaultConfig {
        applicationId "com.dragos.challenge"
        minSdk 23
        targetSdk 32
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
        buildConfigField 'String', 'FLICKR_API', '"254436f525b19ba9f8d55684e3b5b956"'
        buildConfigField 'String', 'FLICKR_BASE_URL', '"https://www.flickr.com/"'
    }

    buildTypes {

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField 'String', 'FLICKR_API', '254436f525b19ba9f8d55684e3b5b956'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.1.1'
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.14.0:osx-x86_64"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

dependencies {

    // DI
    implementation "com.google.dagger:hilt-android:2.42"
    kapt "com.google.dagger:hilt-compiler:2.42"

    // location
    implementation 'androidx.lifecycle:lifecycle-service:2.4.1'
    implementation 'com.google.android.gms:play-services-location:20.0.0'

    // glide
    implementation("io.coil-kt:coil-compose:2.1.0")

    // work manager
    implementation "androidx.work:work-runtime-ktx:2.7.1"

    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation "com.squareup.okhttp3:logging-interceptor:4.9.3"

    // datastore
    implementation  "androidx.datastore:datastore:1.0.0"
    implementation  "com.google.protobuf:protobuf-javalite:3.21.1"

    implementation ('androidx.core:core-ktx:1.8.0') {
        exclude group: 'com.android.support', module: 'support-compat'
    }

    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.4.1'
    implementation 'androidx.activity:activity-compose:1.4.0'
    implementation "androidx.compose.ui:ui:$compose_ui_version"
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_ui_version"
    implementation 'androidx.compose.material:material:1.1.1'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_ui_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_ui_version"


    // unit tests
    testImplementation "junit:junit:4.13.2"
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.6.0'
    testImplementation "org.mockito:mockito-core:4.5.1"
    testImplementation "org.mockito.kotlin:mockito-kotlin:3.2.0"
    testImplementation "io.mockk:mockk:1.12.3"

}